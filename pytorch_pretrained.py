#
# Tested on following pretrained models:
# fasterrcnn_resnet50_fpn
# maskrcnn_resnet50_fpn
#
import cv2
import sys
from torchvision import models
from imutils.video import FPS
import torch
from detection_boxes_pytorch import DetectBoxes

fileName = "assets/cars.mp4"

# Load network
model = models.detection.fasterrcnn_resnet50_fpn(pretrained=True)
# model = models.detection.maskrcnn_resnet50_fpn(pretrained=True)
model = models.

if torch.cuda.device_count() > 0:
    model.cuda()
model.eval()

# class names ex) person, car, truck, and etc.
PATH_TO_LABELS = "labels/mscoco_labels.names"

# load detection class, default confidence threshold is 0.5
detect = DetectBoxes(PATH_TO_LABELS, conf_threshold=0.8)


# Process inputs
winName = 'Faster-RCNN-Pytorch'
try:
    # Read Video file
    cap = cv2.VideoCapture(fileName)
except IOError:
    print("Input video file", fileName, "doesn't exist")
    sys.exit(1)

frameCount = 0
fps = FPS().start()
while True:
    hasFrame, frame = cap.read()
    # if end of frame, program is terminated
    if not hasFrame:
        break

    detect.detect_bounding_boxes(frame, model)

    cv2.imshow(winName, frame)
    fps.update()
    frameCount += 1
    if cv2.waitKey(cv2.CAP_PROP_FPS) and 0xFF == ord('q'):
        break


fps.stop()
print("Video ended")
print("approximate FPS {}".format(fps.fps()))

# releases video and removes all windows generated by the program
cap.release()
cv2.destroyAllWindows()